# Node modules
node_modules/

# Logs
logs
*.log
npm-debug.log*

# dotenv environment variables file
.env

# Python cache files
__pycache__/
*.py[cod]
*$py.class

# Docker files
*.env
*.pid

# Build directories
dist/
build/

# Dependency directories
venv/
.venv/
env/
.venv/

# Byte-compiled / optimized / DLL files
*.py[cod]

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
target/
out/

# PyBuilder
target/

# IPython
profile_default/
ipython_config.py

# pyenv
# For a library or tool, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check in your Python
# version.
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in
#   version control.
#   However, in case of collaboration, if having platform-specific dependencies
#   or dependencies having no cross-pl

# db
db_data

.next